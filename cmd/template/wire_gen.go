// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"layout_template/internal/biz/template_biz"
	"layout_template/internal/conf"
	"layout_template/internal/data/base"
	"layout_template/internal/data/template_data"
	"layout_template/internal/server/grpc_server"
	"layout_template/internal/server/http_server"
	"layout_template/internal/service/template_service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(server *conf.Server, data *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	baseData, cleanup, err := base.NewData(data, logger)
	if err != nil {
		return nil, nil, err
	}
	templateRepo := template_data.NewTemplateRepo(baseData, logger)
	templateUseCase := template_biz.NewTemplateUseCase(templateRepo, logger)
	templateService := template_service.NewTemplateService(templateUseCase)
	grpcServer := grpc_server.NewGRPCServer(server, templateService, logger)
	httpServer := http_server.NewHTTPServer(server, templateService, logger)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
